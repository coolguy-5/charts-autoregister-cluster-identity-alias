name: Create SDM client in EKS via Helm Chart

on:
  workflow_dispatch

jobs:
  create-cluster:
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
    - name: Validate inputs
      run: |
        if [ ${{ secrets.NODE_COUNT }} -lt 3 ]; then
          echo "Error: Node count must be at least 3"
          exit 1
        fi
        
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    

    - name: Install eksctl
      run: |
        # Download and install eksctl
        curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
        sudo mv /tmp/eksctl /usr/local/bin
        eksctl version
        
    - name: Install kubectl
      run: |
        # Download and install kubectl
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        kubectl version --client
        
    - name: Check if EKS cluster exists
      id: check-cluster
      run: |
        if aws eks describe-cluster --name ${{ vars.CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }} >/dev/null 2>&1; then
          echo "cluster-exists=true" >> $GITHUB_OUTPUT
          echo "Cluster ${{ vars.CLUSTER_NAME }} already exists"
        else
          echo "cluster-exists=false" >> $GITHUB_OUTPUT
          echo "Cluster ${{ vars.CLUSTER_NAME }} does not exist"
        fi

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ vars.CLUSTER_NAME }}
          
    - name: Verify cluster status
      run: |
        if [ "${{ steps.check-cluster.outputs.cluster-exists }}" == "true" ]; then
          echo "Using existing cluster ${{ vars.CLUSTER_NAME }}"
        else
          echo "Waiting for new cluster to be ready..."
        fi
        kubectl get nodes
        kubectl get pods --all-namespaces
        
        
    - name: Install Helm
      run: |
        # Download and install Helm
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh
        helm version
        
    - name: Uninstall existing SDM Proxy Helm Chart
      run: |
        helm uninstall sdm-client --namespace sdm-proxy || echo "No existing release to uninstall"
        sleep 15
        kubectl delete job -n sdm-client sdm-pclient-register-cluster || echo "Job isn't lingering after uninstall"
        
    - name: Deploy SDM Proxy Helm Chart (Local)
      id: helm-install
      continue-on-error: true
      run: |
        helm install sdm-client ./deployments/sdm-client \
        --set-string strongdm.auth.serviceToken="${{ secrets.SDM_SERVICE_ACCOUNT_TOKEN }}"